// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interface.proto

#ifndef PROTOBUF_interface_2eproto__INCLUDED
#define PROTOBUF_interface_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_interface_2eproto();
void protobuf_AssignDesc_interface_2eproto();
void protobuf_ShutdownFile_interface_2eproto();

class RPC;
class InitRequest;
class InitResponse;
class Topology;
class PacketInRequest;
class PacketInResponse;
class DataPush;
class DataReceive;

enum RPC_Type {
  RPC_Type_InitRequest = 1,
  RPC_Type_InitResponse = 2,
  RPC_Type_Topology = 3,
  RPC_Type_PacketInRequest = 4,
  RPC_Type_PacketInResponse = 5,
  RPC_Type_DataPush = 6,
  RPC_Type_DataReceive = 7
};
bool RPC_Type_IsValid(int value);
const RPC_Type RPC_Type_Type_MIN = RPC_Type_InitRequest;
const RPC_Type RPC_Type_Type_MAX = RPC_Type_DataReceive;
const int RPC_Type_Type_ARRAYSIZE = RPC_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* RPC_Type_descriptor();
inline const ::std::string& RPC_Type_Name(RPC_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    RPC_Type_descriptor(), value);
}
inline bool RPC_Type_Parse(
    const ::std::string& name, RPC_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RPC_Type>(
    RPC_Type_descriptor(), name, value);
}
// ===================================================================

class RPC : public ::google::protobuf::Message {
 public:
  RPC();
  virtual ~RPC();
  
  RPC(const RPC& from);
  
  inline RPC& operator=(const RPC& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RPC& default_instance();
  
  void Swap(RPC* other);
  
  // implements Message ----------------------------------------------
  
  RPC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RPC& from);
  void MergeFrom(const RPC& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef RPC_Type Type;
  static const Type InitRequest = RPC_Type_InitRequest;
  static const Type InitResponse = RPC_Type_InitResponse;
  static const Type Topology = RPC_Type_Topology;
  static const Type PacketInRequest = RPC_Type_PacketInRequest;
  static const Type PacketInResponse = RPC_Type_PacketInResponse;
  static const Type DataPush = RPC_Type_DataPush;
  static const Type DataReceive = RPC_Type_DataReceive;
  static inline bool Type_IsValid(int value) {
    return RPC_Type_IsValid(value);
  }
  static const Type Type_MIN =
    RPC_Type_Type_MIN;
  static const Type Type_MAX =
    RPC_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    RPC_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return RPC_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return RPC_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return RPC_Type_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .RPC.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::RPC_Type type() const;
  inline void set_type(::RPC_Type value);
  
  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(RPC)
  // @@protoc_insertion_point(class_scope:RPC)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::internal::ExtensionSet _extensions_;
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_interface_2eproto();
  friend void protobuf_AssignDesc_interface_2eproto();
  friend void protobuf_ShutdownFile_interface_2eproto();
  
  void InitAsDefaultInstance();
  static RPC* default_instance_;
};
// -------------------------------------------------------------------

class InitRequest : public ::google::protobuf::Message {
 public:
  InitRequest();
  virtual ~InitRequest();
  
  InitRequest(const InitRequest& from);
  
  inline InitRequest& operator=(const InitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InitRequest& default_instance();
  
  void Swap(InitRequest* other);
  
  // implements Message ----------------------------------------------
  
  InitRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitRequest& from);
  void MergeFrom(const InitRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string ism = 1;
  inline bool has_ism() const;
  inline void clear_ism();
  static const int kIsmFieldNumber = 1;
  inline const ::std::string& ism() const;
  inline void set_ism(const ::std::string& value);
  inline void set_ism(const char* value);
  inline void set_ism(const char* value, size_t size);
  inline ::std::string* mutable_ism();
  inline ::std::string* release_ism();
  
  static const int kMsgFieldNumber = 101;
  static ::google::protobuf::internal::ExtensionIdentifier< ::RPC,
      ::google::protobuf::internal::MessageTypeTraits< ::InitRequest >, 11, false >
    msg;
  // @@protoc_insertion_point(class_scope:InitRequest)
 private:
  inline void set_has_ism();
  inline void clear_has_ism();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* ism_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_interface_2eproto();
  friend void protobuf_AssignDesc_interface_2eproto();
  friend void protobuf_ShutdownFile_interface_2eproto();
  
  void InitAsDefaultInstance();
  static InitRequest* default_instance_;
};
// -------------------------------------------------------------------

class InitResponse : public ::google::protobuf::Message {
 public:
  InitResponse();
  virtual ~InitResponse();
  
  InitResponse(const InitResponse& from);
  
  inline InitResponse& operator=(const InitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InitResponse& default_instance();
  
  void Swap(InitResponse* other);
  
  // implements Message ----------------------------------------------
  
  InitResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitResponse& from);
  void MergeFrom(const InitResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 domain = 1;
  inline bool has_domain() const;
  inline void clear_domain();
  static const int kDomainFieldNumber = 1;
  inline ::google::protobuf::uint64 domain() const;
  inline void set_domain(::google::protobuf::uint64 value);
  
  static const int kMsgFieldNumber = 102;
  static ::google::protobuf::internal::ExtensionIdentifier< ::RPC,
      ::google::protobuf::internal::MessageTypeTraits< ::InitResponse >, 11, false >
    msg;
  // @@protoc_insertion_point(class_scope:InitResponse)
 private:
  inline void set_has_domain();
  inline void clear_has_domain();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 domain_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_interface_2eproto();
  friend void protobuf_AssignDesc_interface_2eproto();
  friend void protobuf_ShutdownFile_interface_2eproto();
  
  void InitAsDefaultInstance();
  static InitResponse* default_instance_;
};
// -------------------------------------------------------------------

class Topology : public ::google::protobuf::Message {
 public:
  Topology();
  virtual ~Topology();
  
  Topology(const Topology& from);
  
  inline Topology& operator=(const Topology& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Topology& default_instance();
  
  void Swap(Topology* other);
  
  // implements Message ----------------------------------------------
  
  Topology* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Topology& from);
  void MergeFrom(const Topology& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string dot = 1;
  inline bool has_dot() const;
  inline void clear_dot();
  static const int kDotFieldNumber = 1;
  inline const ::std::string& dot() const;
  inline void set_dot(const ::std::string& value);
  inline void set_dot(const char* value);
  inline void set_dot(const char* value, size_t size);
  inline ::std::string* mutable_dot();
  inline ::std::string* release_dot();
  
  static const int kMsgFieldNumber = 103;
  static ::google::protobuf::internal::ExtensionIdentifier< ::RPC,
      ::google::protobuf::internal::MessageTypeTraits< ::Topology >, 11, false >
    msg;
  // @@protoc_insertion_point(class_scope:Topology)
 private:
  inline void set_has_dot();
  inline void clear_has_dot();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* dot_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_interface_2eproto();
  friend void protobuf_AssignDesc_interface_2eproto();
  friend void protobuf_ShutdownFile_interface_2eproto();
  
  void InitAsDefaultInstance();
  static Topology* default_instance_;
};
// -------------------------------------------------------------------

class PacketInRequest : public ::google::protobuf::Message {
 public:
  PacketInRequest();
  virtual ~PacketInRequest();
  
  PacketInRequest(const PacketInRequest& from);
  
  inline PacketInRequest& operator=(const PacketInRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketInRequest& default_instance();
  
  void Swap(PacketInRequest* other);
  
  // implements Message ----------------------------------------------
  
  PacketInRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PacketInRequest& from);
  void MergeFrom(const PacketInRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 cookie = 1;
  inline bool has_cookie() const;
  inline void clear_cookie();
  static const int kCookieFieldNumber = 1;
  inline ::google::protobuf::uint32 cookie() const;
  inline void set_cookie(::google::protobuf::uint32 value);
  
  // required uint32 srcV = 2;
  inline bool has_srcv() const;
  inline void clear_srcv();
  static const int kSrcVFieldNumber = 2;
  inline ::google::protobuf::uint32 srcv() const;
  inline void set_srcv(::google::protobuf::uint32 value);
  
  // required bytes packet = 3;
  inline bool has_packet() const;
  inline void clear_packet();
  static const int kPacketFieldNumber = 3;
  inline const ::std::string& packet() const;
  inline void set_packet(const ::std::string& value);
  inline void set_packet(const char* value);
  inline void set_packet(const void* value, size_t size);
  inline ::std::string* mutable_packet();
  inline ::std::string* release_packet();
  
  static const int kMsgFieldNumber = 104;
  static ::google::protobuf::internal::ExtensionIdentifier< ::RPC,
      ::google::protobuf::internal::MessageTypeTraits< ::PacketInRequest >, 11, false >
    msg;
  // @@protoc_insertion_point(class_scope:PacketInRequest)
 private:
  inline void set_has_cookie();
  inline void clear_has_cookie();
  inline void set_has_srcv();
  inline void clear_has_srcv();
  inline void set_has_packet();
  inline void clear_has_packet();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 cookie_;
  ::google::protobuf::uint32 srcv_;
  ::std::string* packet_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_interface_2eproto();
  friend void protobuf_AssignDesc_interface_2eproto();
  friend void protobuf_ShutdownFile_interface_2eproto();
  
  void InitAsDefaultInstance();
  static PacketInRequest* default_instance_;
};
// -------------------------------------------------------------------

class PacketInResponse : public ::google::protobuf::Message {
 public:
  PacketInResponse();
  virtual ~PacketInResponse();
  
  PacketInResponse(const PacketInResponse& from);
  
  inline PacketInResponse& operator=(const PacketInResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketInResponse& default_instance();
  
  void Swap(PacketInResponse* other);
  
  // implements Message ----------------------------------------------
  
  PacketInResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PacketInResponse& from);
  void MergeFrom(const PacketInResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 cookie = 1;
  inline bool has_cookie() const;
  inline void clear_cookie();
  static const int kCookieFieldNumber = 1;
  inline ::google::protobuf::uint32 cookie() const;
  inline void set_cookie(::google::protobuf::uint32 value);
  
  // required uint32 srcV = 2;
  inline bool has_srcv() const;
  inline void clear_srcv();
  static const int kSrcVFieldNumber = 2;
  inline ::google::protobuf::uint32 srcv() const;
  inline void set_srcv(::google::protobuf::uint32 value);
  
  // optional uint32 midV = 3;
  inline bool has_midv() const;
  inline void clear_midv();
  static const int kMidVFieldNumber = 3;
  inline ::google::protobuf::uint32 midv() const;
  inline void set_midv(::google::protobuf::uint32 value);
  
  // required uint32 dstV = 4;
  inline bool has_dstv() const;
  inline void clear_dstv();
  static const int kDstVFieldNumber = 4;
  inline ::google::protobuf::uint32 dstv() const;
  inline void set_dstv(::google::protobuf::uint32 value);
  
  // required bytes match = 5;
  inline bool has_match() const;
  inline void clear_match();
  static const int kMatchFieldNumber = 5;
  inline const ::std::string& match() const;
  inline void set_match(const ::std::string& value);
  inline void set_match(const char* value);
  inline void set_match(const void* value, size_t size);
  inline ::std::string* mutable_match();
  inline ::std::string* release_match();
  
  static const int kMsgFieldNumber = 105;
  static ::google::protobuf::internal::ExtensionIdentifier< ::RPC,
      ::google::protobuf::internal::MessageTypeTraits< ::PacketInResponse >, 11, false >
    msg;
  // @@protoc_insertion_point(class_scope:PacketInResponse)
 private:
  inline void set_has_cookie();
  inline void clear_has_cookie();
  inline void set_has_srcv();
  inline void clear_has_srcv();
  inline void set_has_midv();
  inline void clear_has_midv();
  inline void set_has_dstv();
  inline void clear_has_dstv();
  inline void set_has_match();
  inline void clear_has_match();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 cookie_;
  ::google::protobuf::uint32 srcv_;
  ::google::protobuf::uint32 midv_;
  ::google::protobuf::uint32 dstv_;
  ::std::string* match_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_interface_2eproto();
  friend void protobuf_AssignDesc_interface_2eproto();
  friend void protobuf_ShutdownFile_interface_2eproto();
  
  void InitAsDefaultInstance();
  static PacketInResponse* default_instance_;
};
// -------------------------------------------------------------------

class DataPush : public ::google::protobuf::Message {
 public:
  DataPush();
  virtual ~DataPush();
  
  DataPush(const DataPush& from);
  
  inline DataPush& operator=(const DataPush& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataPush& default_instance();
  
  void Swap(DataPush* other);
  
  // implements Message ----------------------------------------------
  
  DataPush* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataPush& from);
  void MergeFrom(const DataPush& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 srcV = 1;
  inline bool has_srcv() const;
  inline void clear_srcv();
  static const int kSrcVFieldNumber = 1;
  inline ::google::protobuf::int64 srcv() const;
  inline void set_srcv(::google::protobuf::int64 value);
  
  // required int64 dstV = 2;
  inline bool has_dstv() const;
  inline void clear_dstv();
  static const int kDstVFieldNumber = 2;
  inline ::google::protobuf::int64 dstv() const;
  inline void set_dstv(::google::protobuf::int64 value);
  
  // required bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  
  static const int kMsgFieldNumber = 106;
  static ::google::protobuf::internal::ExtensionIdentifier< ::RPC,
      ::google::protobuf::internal::MessageTypeTraits< ::DataPush >, 11, false >
    msg;
  // @@protoc_insertion_point(class_scope:DataPush)
 private:
  inline void set_has_srcv();
  inline void clear_has_srcv();
  inline void set_has_dstv();
  inline void clear_has_dstv();
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 srcv_;
  ::google::protobuf::int64 dstv_;
  ::std::string* data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_interface_2eproto();
  friend void protobuf_AssignDesc_interface_2eproto();
  friend void protobuf_ShutdownFile_interface_2eproto();
  
  void InitAsDefaultInstance();
  static DataPush* default_instance_;
};
// -------------------------------------------------------------------

class DataReceive : public ::google::protobuf::Message {
 public:
  DataReceive();
  virtual ~DataReceive();
  
  DataReceive(const DataReceive& from);
  
  inline DataReceive& operator=(const DataReceive& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataReceive& default_instance();
  
  void Swap(DataReceive* other);
  
  // implements Message ----------------------------------------------
  
  DataReceive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataReceive& from);
  void MergeFrom(const DataReceive& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 srcV = 1;
  inline bool has_srcv() const;
  inline void clear_srcv();
  static const int kSrcVFieldNumber = 1;
  inline ::google::protobuf::int64 srcv() const;
  inline void set_srcv(::google::protobuf::int64 value);
  
  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  
  static const int kMsgFieldNumber = 107;
  static ::google::protobuf::internal::ExtensionIdentifier< ::RPC,
      ::google::protobuf::internal::MessageTypeTraits< ::DataReceive >, 11, false >
    msg;
  // @@protoc_insertion_point(class_scope:DataReceive)
 private:
  inline void set_has_srcv();
  inline void clear_has_srcv();
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 srcv_;
  ::std::string* data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_interface_2eproto();
  friend void protobuf_AssignDesc_interface_2eproto();
  friend void protobuf_ShutdownFile_interface_2eproto();
  
  void InitAsDefaultInstance();
  static DataReceive* default_instance_;
};
// ===================================================================


// ===================================================================

// RPC

// required .RPC.Type type = 1;
inline bool RPC::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RPC::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RPC::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RPC::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::RPC_Type RPC::type() const {
  return static_cast< ::RPC_Type >(type_);
}
inline void RPC::set_type(::RPC_Type value) {
  GOOGLE_DCHECK(::RPC_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// InitRequest

// required string ism = 1;
inline bool InitRequest::has_ism() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitRequest::set_has_ism() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitRequest::clear_has_ism() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitRequest::clear_ism() {
  if (ism_ != &::google::protobuf::internal::kEmptyString) {
    ism_->clear();
  }
  clear_has_ism();
}
inline const ::std::string& InitRequest::ism() const {
  return *ism_;
}
inline void InitRequest::set_ism(const ::std::string& value) {
  set_has_ism();
  if (ism_ == &::google::protobuf::internal::kEmptyString) {
    ism_ = new ::std::string;
  }
  ism_->assign(value);
}
inline void InitRequest::set_ism(const char* value) {
  set_has_ism();
  if (ism_ == &::google::protobuf::internal::kEmptyString) {
    ism_ = new ::std::string;
  }
  ism_->assign(value);
}
inline void InitRequest::set_ism(const char* value, size_t size) {
  set_has_ism();
  if (ism_ == &::google::protobuf::internal::kEmptyString) {
    ism_ = new ::std::string;
  }
  ism_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InitRequest::mutable_ism() {
  set_has_ism();
  if (ism_ == &::google::protobuf::internal::kEmptyString) {
    ism_ = new ::std::string;
  }
  return ism_;
}
inline ::std::string* InitRequest::release_ism() {
  clear_has_ism();
  if (ism_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ism_;
    ism_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// InitResponse

// required uint64 domain = 1;
inline bool InitResponse::has_domain() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitResponse::set_has_domain() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitResponse::clear_has_domain() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitResponse::clear_domain() {
  domain_ = GOOGLE_ULONGLONG(0);
  clear_has_domain();
}
inline ::google::protobuf::uint64 InitResponse::domain() const {
  return domain_;
}
inline void InitResponse::set_domain(::google::protobuf::uint64 value) {
  set_has_domain();
  domain_ = value;
}

// -------------------------------------------------------------------

// Topology

// required string dot = 1;
inline bool Topology::has_dot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Topology::set_has_dot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Topology::clear_has_dot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Topology::clear_dot() {
  if (dot_ != &::google::protobuf::internal::kEmptyString) {
    dot_->clear();
  }
  clear_has_dot();
}
inline const ::std::string& Topology::dot() const {
  return *dot_;
}
inline void Topology::set_dot(const ::std::string& value) {
  set_has_dot();
  if (dot_ == &::google::protobuf::internal::kEmptyString) {
    dot_ = new ::std::string;
  }
  dot_->assign(value);
}
inline void Topology::set_dot(const char* value) {
  set_has_dot();
  if (dot_ == &::google::protobuf::internal::kEmptyString) {
    dot_ = new ::std::string;
  }
  dot_->assign(value);
}
inline void Topology::set_dot(const char* value, size_t size) {
  set_has_dot();
  if (dot_ == &::google::protobuf::internal::kEmptyString) {
    dot_ = new ::std::string;
  }
  dot_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Topology::mutable_dot() {
  set_has_dot();
  if (dot_ == &::google::protobuf::internal::kEmptyString) {
    dot_ = new ::std::string;
  }
  return dot_;
}
inline ::std::string* Topology::release_dot() {
  clear_has_dot();
  if (dot_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = dot_;
    dot_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PacketInRequest

// required uint32 cookie = 1;
inline bool PacketInRequest::has_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PacketInRequest::set_has_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PacketInRequest::clear_has_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PacketInRequest::clear_cookie() {
  cookie_ = 0u;
  clear_has_cookie();
}
inline ::google::protobuf::uint32 PacketInRequest::cookie() const {
  return cookie_;
}
inline void PacketInRequest::set_cookie(::google::protobuf::uint32 value) {
  set_has_cookie();
  cookie_ = value;
}

// required uint32 srcV = 2;
inline bool PacketInRequest::has_srcv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PacketInRequest::set_has_srcv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PacketInRequest::clear_has_srcv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PacketInRequest::clear_srcv() {
  srcv_ = 0u;
  clear_has_srcv();
}
inline ::google::protobuf::uint32 PacketInRequest::srcv() const {
  return srcv_;
}
inline void PacketInRequest::set_srcv(::google::protobuf::uint32 value) {
  set_has_srcv();
  srcv_ = value;
}

// required bytes packet = 3;
inline bool PacketInRequest::has_packet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PacketInRequest::set_has_packet() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PacketInRequest::clear_has_packet() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PacketInRequest::clear_packet() {
  if (packet_ != &::google::protobuf::internal::kEmptyString) {
    packet_->clear();
  }
  clear_has_packet();
}
inline const ::std::string& PacketInRequest::packet() const {
  return *packet_;
}
inline void PacketInRequest::set_packet(const ::std::string& value) {
  set_has_packet();
  if (packet_ == &::google::protobuf::internal::kEmptyString) {
    packet_ = new ::std::string;
  }
  packet_->assign(value);
}
inline void PacketInRequest::set_packet(const char* value) {
  set_has_packet();
  if (packet_ == &::google::protobuf::internal::kEmptyString) {
    packet_ = new ::std::string;
  }
  packet_->assign(value);
}
inline void PacketInRequest::set_packet(const void* value, size_t size) {
  set_has_packet();
  if (packet_ == &::google::protobuf::internal::kEmptyString) {
    packet_ = new ::std::string;
  }
  packet_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PacketInRequest::mutable_packet() {
  set_has_packet();
  if (packet_ == &::google::protobuf::internal::kEmptyString) {
    packet_ = new ::std::string;
  }
  return packet_;
}
inline ::std::string* PacketInRequest::release_packet() {
  clear_has_packet();
  if (packet_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = packet_;
    packet_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PacketInResponse

// required uint32 cookie = 1;
inline bool PacketInResponse::has_cookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PacketInResponse::set_has_cookie() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PacketInResponse::clear_has_cookie() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PacketInResponse::clear_cookie() {
  cookie_ = 0u;
  clear_has_cookie();
}
inline ::google::protobuf::uint32 PacketInResponse::cookie() const {
  return cookie_;
}
inline void PacketInResponse::set_cookie(::google::protobuf::uint32 value) {
  set_has_cookie();
  cookie_ = value;
}

// required uint32 srcV = 2;
inline bool PacketInResponse::has_srcv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PacketInResponse::set_has_srcv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PacketInResponse::clear_has_srcv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PacketInResponse::clear_srcv() {
  srcv_ = 0u;
  clear_has_srcv();
}
inline ::google::protobuf::uint32 PacketInResponse::srcv() const {
  return srcv_;
}
inline void PacketInResponse::set_srcv(::google::protobuf::uint32 value) {
  set_has_srcv();
  srcv_ = value;
}

// optional uint32 midV = 3;
inline bool PacketInResponse::has_midv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PacketInResponse::set_has_midv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PacketInResponse::clear_has_midv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PacketInResponse::clear_midv() {
  midv_ = 0u;
  clear_has_midv();
}
inline ::google::protobuf::uint32 PacketInResponse::midv() const {
  return midv_;
}
inline void PacketInResponse::set_midv(::google::protobuf::uint32 value) {
  set_has_midv();
  midv_ = value;
}

// required uint32 dstV = 4;
inline bool PacketInResponse::has_dstv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PacketInResponse::set_has_dstv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PacketInResponse::clear_has_dstv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PacketInResponse::clear_dstv() {
  dstv_ = 0u;
  clear_has_dstv();
}
inline ::google::protobuf::uint32 PacketInResponse::dstv() const {
  return dstv_;
}
inline void PacketInResponse::set_dstv(::google::protobuf::uint32 value) {
  set_has_dstv();
  dstv_ = value;
}

// required bytes match = 5;
inline bool PacketInResponse::has_match() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PacketInResponse::set_has_match() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PacketInResponse::clear_has_match() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PacketInResponse::clear_match() {
  if (match_ != &::google::protobuf::internal::kEmptyString) {
    match_->clear();
  }
  clear_has_match();
}
inline const ::std::string& PacketInResponse::match() const {
  return *match_;
}
inline void PacketInResponse::set_match(const ::std::string& value) {
  set_has_match();
  if (match_ == &::google::protobuf::internal::kEmptyString) {
    match_ = new ::std::string;
  }
  match_->assign(value);
}
inline void PacketInResponse::set_match(const char* value) {
  set_has_match();
  if (match_ == &::google::protobuf::internal::kEmptyString) {
    match_ = new ::std::string;
  }
  match_->assign(value);
}
inline void PacketInResponse::set_match(const void* value, size_t size) {
  set_has_match();
  if (match_ == &::google::protobuf::internal::kEmptyString) {
    match_ = new ::std::string;
  }
  match_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PacketInResponse::mutable_match() {
  set_has_match();
  if (match_ == &::google::protobuf::internal::kEmptyString) {
    match_ = new ::std::string;
  }
  return match_;
}
inline ::std::string* PacketInResponse::release_match() {
  clear_has_match();
  if (match_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = match_;
    match_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// DataPush

// required int64 srcV = 1;
inline bool DataPush::has_srcv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataPush::set_has_srcv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataPush::clear_has_srcv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataPush::clear_srcv() {
  srcv_ = GOOGLE_LONGLONG(0);
  clear_has_srcv();
}
inline ::google::protobuf::int64 DataPush::srcv() const {
  return srcv_;
}
inline void DataPush::set_srcv(::google::protobuf::int64 value) {
  set_has_srcv();
  srcv_ = value;
}

// required int64 dstV = 2;
inline bool DataPush::has_dstv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataPush::set_has_dstv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataPush::clear_has_dstv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataPush::clear_dstv() {
  dstv_ = GOOGLE_LONGLONG(0);
  clear_has_dstv();
}
inline ::google::protobuf::int64 DataPush::dstv() const {
  return dstv_;
}
inline void DataPush::set_dstv(::google::protobuf::int64 value) {
  set_has_dstv();
  dstv_ = value;
}

// required bytes data = 3;
inline bool DataPush::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataPush::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataPush::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataPush::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& DataPush::data() const {
  return *data_;
}
inline void DataPush::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void DataPush::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void DataPush::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataPush::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* DataPush::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// DataReceive

// required int64 srcV = 1;
inline bool DataReceive::has_srcv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataReceive::set_has_srcv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataReceive::clear_has_srcv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataReceive::clear_srcv() {
  srcv_ = GOOGLE_LONGLONG(0);
  clear_has_srcv();
}
inline ::google::protobuf::int64 DataReceive::srcv() const {
  return srcv_;
}
inline void DataReceive::set_srcv(::google::protobuf::int64 value) {
  set_has_srcv();
  srcv_ = value;
}

// required bytes data = 2;
inline bool DataReceive::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataReceive::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataReceive::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataReceive::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& DataReceive::data() const {
  return *data_;
}
inline void DataReceive::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void DataReceive::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void DataReceive::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataReceive::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* DataReceive::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RPC_Type>() {
  return ::RPC_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_interface_2eproto__INCLUDED
